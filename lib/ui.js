// Generated by CoffeeScript 1.10.0
(function() {
  var slice = [].slice;

  App.UI = (function() {
    function UI() {}

    UI.anonymousMode = function() {
      $('#api-mode').text('anonymous');
      $('#github-username').val('');
      $('#github-password').val('');
      $('button#sign-out').hide();
      $('button#sign-in').show();
      $('#github-username').prop('disabled', false);
      $('#github-password').prop('disabled', false);
      $('button#sign-in').prop('disabled', true);
      return $('#github-repo').focus();
    };

    UI.signedInMode = function(username) {
      $('#api-mode').text('authenticated');
      $('button#sign-in').hide();
      $('button#sign-out').show();
      $('#github-username').prop('disabled', true);
      $('#github-password').prop('disabled', true);
      return $('#github-repo').focus();
    };

    UI.showRateInfo = function(rateData) {
      $('#rate-limit').text(rateData.limit);
      return $('#rate-remaining').text(rateData.remaining);
    };

    UI.progress = function(percent) {
      if (percent > 0) {
        this._changeProgress(percent);
        return this.showProgressBar();
      } else {
        this.hideProgressBar();
        return this._changeProgress(percent);
      }
    };

    UI.refreshLog = function(repos) {
      var tbody;
      tbody = "<tbody>" + (UI.logRows(repos)) + "</tbody>";
      $('table#log tbody').replaceWith(tbody);
      return $('#avg-effectiveness').text(UI.average(repos, (function(r) {
        return r.effectiveness();
      })));
    };

    UI.logRows = function(repos) {
      var rows;
      return rows = repos.reduce(function(acc, r) {
        return acc + UI.tr(UI.td(UI.linkedRepoName(r)), UI.td(sprintf('%.1f', r.effectiveness())), UI.td('(tbd)'));
      }, '');
    };

    UI.linkedRepoName = function(repo) {
      return "<a href=" + (repo.url()) + " target=_blank>" + repo.name + " <img src=external_link_icon.png></a>";
    };

    UI.average = function(items, f) {
      var sum;
      sum = items.reduce((function(acc, i) {
        return acc + f(i);
      }), 0);
      return sprintf('%.1f', sum / items.length);
    };

    UI.td = function(text) {
      return "<td class=data>" + text + "</td>";
    };

    UI.tr = function() {
      var cells;
      cells = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return "<tr>" + (cells.join('')) + "</tr>";
    };

    UI.showError = function(message) {
      $('#error-text').text(message);
      return $('#error-alert').show();
    };

    UI.hideError = function() {
      return $('#error-alert').hide();
    };

    UI.showProgressBar = function() {
      return $('#progress-display').show();
    };

    UI.hideProgressBar = function() {
      return $('#progress-display').hide();
    };

    UI.showResultsDisplay = function() {
      return $('#results-display').show();
    };

    UI.hideResultsDisplay = function() {
      return $('#results-display').hide();
    };

    UI.showResults = function() {
      return $('#results').show();
    };

    UI.hideResults = function() {
      return $('#results').hide();
    };

    UI._changeProgress = function(percent) {
      return $('.progress-bar').attr('style', "width: " + percent + "%");
    };

    return UI;

  })();

}).call(this);
